@if (!User.Identity.Name.Equals("admin@gmail.com"))
{
    {
        ViewBag.Title = "Error";
    }
    <h2>Not Authorized</h2>
}
else
{
    @model AsianFoodProject.Models.Food

    {
        ViewBag.Title = "Edit";
    }

    <h2>Food - Edit</h2>
    <hr />

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>Food</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.FoodID)

            <div class="form-group">
                @Html.LabelFor(model => model.FoodName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FoodName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoodName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsVegetarian, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsVegetarian)
                        @Html.ValidationMessageFor(model => model.IsVegetarian, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FoodPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FoodPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FoodPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    if (Model.CategoryId == 1)
    {
        <p>
            @Html.ActionLink("Back to Wok", "Wok") |
            @Html.ActionLink("Back to All Foods", "Index")
        </p>
    }
    else if (Model.CategoryId == 2)
    {
        <p>
            @Html.ActionLink("Back to Shushi", "Shushi") |
            @Html.ActionLink("Back to All Foods", "Index")
        </p>
    }
    else if (Model.CategoryId == 3)
    {
        <p>
            @Html.ActionLink("Back to Rice", "Rice") |
            @Html.ActionLink("Back to All Foods", "Index")
        </p>
    }
}